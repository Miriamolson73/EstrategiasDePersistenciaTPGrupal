     mkdir api_v1
     cd api_v1/
     npm install --save sequelize
     npm init -y
     sudo apt-get install mariadb
     sudo apt-get install mariadb-server
     npm install --save mariadb
     sudo npm install express-generator -g

     /*pasos*/
     clonar
     situarse en el path /api

     $npm install ó $npm i => instala todas las dependencias que están descriptas en el package.json
     $npm install sequelize --save
     $npm install sequelize-cli --save

     configurar el /config/config.json con los datos de la database que vamos a trabajar

     $npx sequelize db:migrate 

     npx sequelize init
     DEBUG=api:* npm start


     COMANDO PARA LA CREACION DE UNA NUEVA ENTIDAD:
     *********************************************
     
                                        //nombreTabla          //campo y tipo de datos

     ejemplo : npx sequelize-cli model:generate --name materias --attributes nombre:string

     
     $npx sequelize-cli model:generate --name carrera --attributes nombre:string

     luego: 

     // plasma el fichero recien creado con el comando de arriba en la base de datos

     //la linea de abajo genero la migracion, creando un modelo(tabla)

     $npx sequelize db:migrate 

     (si sale algun error del tipo : 

     node:internal/streams/writable:293
      throw new ERR_UNKNOWN_ENCODING(encoding);
      ^

     TypeError [ERR_UNKNOWN_ENCODING]: Unknown encoding: <ref *1> Handshake
     
     ) : correr :

     $npm update y volver a realizar la migracion

     //y finalmente ejecutar este comando para realizar las consultas desde el postman:

     $npm run start


**************************************************************
**En windows
1) clonar el código del repositorio:

     git clone https://github.com/Miriamolson73/EstrategiasDePersistenciaTPGrupal.git

2) Entrar a unahur/api.
     cd /api 

3) Realizar la instalación de sus dependencias.
     npm install

4) Realizar la instalación de sequelize-cli
     npm install sequelize-cli -–save

*) Antes de ejecutar los comandos siguientes, levantar la base de datos y 
  crearla con el nombre que se usa en el api/config/config.json
	

5) Ejecutar las migraciones -> estas son las creaciones de la base de datos.
     npx sequelize db:migrate

6) Levantar la api, con la siguiente instrucción.
DEBUG=api:* npm start

7) Ingresar por navegador a : http://localhost:3001/car


/////////////////////////////////////////////////
ASOCIACIONES
1. MODIFICAR EL MODELS AL CUAL QUEREMOS RELACIONAR "CORRER NUEVAMENTE EL $npx sequelize db:migrate"
2. EN ROUTES MODIFICAR LOS METODOS GET (no es necesario correr la migracion)
3. NPM START


Segunda Iteracion / Creacion de nuevo modelo y relación:
*******************************************************

COMANDO PARA LA CREACION DE UNA NUEVO MODELO:
*********************************************
     
                                        //nombreTabla          //campo y tipo de datos

ejemplo utilizado: 

$npx sequelize-cli model:generate --name alumno --attributes nombre:string,apellido:string,id_materia:integer

*************************************************

Prueba funcionalidad token
**************************
1) generar token
POST  - localhost:3001/tok/login

2) para modificar la tabla alumnos
solicitamos y generamos el token
POST - localhost:3001/alu/login

para modificar nos solicita el token recien creado

PUT - localhost:3001/alu/id 

headers 
key = authorization 
value = Bearer token (donde "token" es el token que generamos anteriormente)

Luego:
body = raw / json

{"nombre":"Juana"}

Mensaje Obtenido: 
{
    "mensaje": "Usuario Autorizado",
    "observacion": "Se modifico el usuario"
}


Consultar Paginacion desde postman:
***********************************
Se rellenará automaticamente en "Params", "Key" y "Values"

KEY=nPagina,
VALUE=nElementos

GET - localhost:3001/alu/pag?nPagina=1&nElementos=1


